# 
# Common make targets for Linux user and kernel builds included by top
# level Linux makefiles
#
# Variables referenced:
#
# LINUX_MAKE_FLAGS
#   Additional flags passed to Make
#
# LINUX_MAKE_USER
#   Defined: user build
#   Undefined: kernel build
#
# LINUX_MAKE_DIR
#   Common makefile location, if it is not ../common
#
# TARGET_BOARD

export DEST_DIR_SUFFIX :=$(subst $(realpath $(KERNEL_ROOT_DIR))/out,,$(realpath $(CURDIR)/$(dir ($(firstword $(MAKEFILE_LIST))))))

ifeq (,$(kernel_version))
kernel_version=2_4
endif

ifndef LINUX_MAKE_SHARED_LIB
LINUX_MAKE_SHARED_LIB=0
endif

ifeq (,$(SHAREDLIBVER))
SHAREDLIBVER=1
endif

ifndef LINUX_MAKE_DIR
ifdef LINUX_MAKE_USER
LINUX_MAKE_DIR := $(KERNEL_ROOT_DIR)/buildroot/linux/user/common
else
LINUX_MAKE_DIR := $(KERNEL_ROOT_DIR)/buildroot/linux/$(TARGET_BOARD)/common
endif
endif

ifdef LINUX_MAKE_USER
  CMD = $(LINUX_MAKE_FLAGS) -C $(LINUX_MAKE_DIR) \
        platform=$(platform) bldroot_suffix=/$(platform) kernel_version=$(kernel_version) \
        LINUX_MAKE_SHARED_LIB=$(LINUX_MAKE_SHARED_LIB) SHAREDLIBVER=$(SHAREDLIBVER)
else
  export LINUX_MAKE_KERNEL := 1
  CMD = $(LINUX_MAKE_FLAGS) -C $(LINUX_MAKE_DIR) \
        platform=$(platform) kernel_version=$(kernel_version)
endif


ifneq (,$(LINUX_INCLUDE))
  CMD += LINUX_INCLUDE=$(LINUX_INCLUDE)
endif

# gmake does not understand $(CMD) to be a submake
# options are to +$(CMD) or $(MAKE) $(CMD)
# trying the latter
build:
	$(MAKE) $(CMD)

DELIVER clean C_COMPILER CXX_COMPILER variable menuconfig bootload kernel rootfs image:
	$(MAKE) $(CMD) $@

distclean clean_d: clean

.PHONY: build clean distclean clean_d DELIVER variable menuconfig bootload kernel rootfs image

